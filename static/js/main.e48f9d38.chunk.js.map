{"version":3,"sources":["assets/images/logo.svg","Compoenets/Shared/Navbarctm.js","Compoenets/Shared/Footer.js","AppRoutes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbarctm","state","show","window","onscroll","nav","document","getElementById","pageYOffset","classList","add","remove","this","setState","className","Navbar","fixed","expand","id","Container","Brand","to","src","Toggle","aria-controls","Collapse","Nav","isPathActive","onClick","handelModal","type","Modal","aria-labelledby","centered","Body","country","value","phone","onChange","path","props","location","pathname","startsWith","Component","withRouter","Footer","href","placeholder","GetStarted","lazy","Home","HelpCenter","Contact","PrivacyPolicy","AppRoutes","fallback","exact","component","App","onRouteChanged","headerComponent","isFullPageLayout","footerComponent","prevProps","querySelector","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e48f9d38.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3ceb149a.svg\";","import React, { Component } from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport {Modal,Container ,Nav , Navbar} from 'react-bootstrap'\r\nimport 'react-phone-input-2/lib/bootstrap.css'\r\n// import $ from 'jquery'\r\nimport logo from '../../assets/images/logo.svg'\r\nexport class Navbarctm extends Component {\r\n    componentDidMount(){\r\n        window.onscroll = function() {\r\n            var nav = document.getElementById('navbar');\r\n            if ( window.pageYOffset > 50 ) {\r\n                nav.classList.add(\"bg-white\");\r\n            } else {\r\n                nav.classList.remove(\"bg-white\");\r\n            }\r\n        }\r\n        // var currentpath = window.location.pathname\r\n        // console.log(currentpath)\r\n        // if(currentpath === \"/Home\"){\r\n        //     console.log('this path')\r\n        // }\r\n\r\n    };\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            show:false\r\n        }\r\n    }\r\n\r\n    handelModal(){\r\n        this.setState({\r\n            show:!this.state.show\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"banner\">\r\n                {/* <nav className=\"navbar navbar-expand-lg  fixed-top\" id=\"navbar\">\r\n                    <div className=\"container\">\r\n                        <Link to=\"/\" className=\"navbar-brand\" >\r\n                        <img src=\"/images/logo.svg\"/>\r\n                        </Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    \r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/Contact\" >Contact</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/HelpCenter\" >Help Center</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <button className=\"btn btn-theme \" onClick={()=>{this.handelModal()}}  type=\"submit\">Login</button>\r\n                            </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </nav> */}\r\n\r\n                <Navbar fixed=\"top\" expand=\"lg\" id=\"navbar\">\r\n                    <Container>\r\n                    <Navbar.Brand >\r\n                    <Link to=\"/Home\" className=\"navbar-brand\" >\r\n                            <img src=\"/images/logo.svg\"/>\r\n                            </Link>\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"ml-auto\">\r\n                                {/* <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                                <Nav.Link href=\"#link\">Link</Nav.Link> */}\r\n                                <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link  to=\"/Contact\"   className={\r\n                          this.isPathActive(\"/Contact\")\r\n                            ? \"nav-link active\"\r\n                            : \"nav-link\"\r\n                        } >Contact</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link  to=\"/HelpCenter\"  className={\r\n                          this.isPathActive(\"/HelpCenter\")\r\n                            ? \"nav-link active\"\r\n                            : \"nav-link\"\r\n                        } >Help Center</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <button className=\"btn btn-theme \" onClick={()=>{this.handelModal()}}  type=\"submit\">Login</button>\r\n                            </li>\r\n                            </ul>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n                <Modal show={this.state.show} aria-labelledby=\"contained-modal-title-vcenter\" centered className=\"loginModal\">\r\n                    <Modal.Body className=\"p-5\">\r\n                        <button className=\"closePopup\" onClick={()=>{this.handelModal()}}><i className=\"fa fa-times\"></i></button>\r\n                        <h2>Investor</h2>\r\n                        <h3>We are open to suggestions</h3>\r\n                        <PhoneInput\r\n                            country={'us'}\r\n                            value={this.state.phone}\r\n                            onChange={phone => this.setState({ phone })}\r\n                            />\r\n                        {/* <div className=\"form-group\">\r\n                                <input class=\"form-control\" type=\"text\" placeholder=\"Your Phone\"/>\r\n                            </div> */}\r\n                            <button className=\"btn btn-theme btn-block\">Next</button>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n    isPathActive(path) {\r\n        return this.props.location.pathname.startsWith(path)\r\n         \r\n      }\r\n}\r\n\r\nexport default withRouter(Navbarctm)\r\n\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer className=\"footer\">\r\n                <div className=\"container footer-top\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-5\"><img src=\"/images/logo-footer.svg\"/></div>\r\n                    <div className=\"col-md-2\">\r\n                    <ul className=\"list-group border-0\">\r\n                        <li className=\"list-group-item border-0 menu-heading\">Support</li>\r\n                        <li className=\"list-group-item border-0 menu-value\"><a href=\"#\">Help Center</a></li>\r\n                        <li className=\"list-group-item border-0 menu-value\"><a href=\"#\">Contact</a></li>\r\n                    </ul>\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                    <ul className=\"list-group border-0\">\r\n                        <li className=\"list-group-item border-0 menu-heading\">Download</li>\r\n                        <li className=\"list-group-item border-0 menu-value\"><a href=\"#\">Android</a></li>\r\n                        <li className=\"list-group-item border-0 menu-value\"><a href=\"#\">IOS</a></li>\r\n                    </ul>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                    <ul className=\"list-group border-0\">\r\n                        <li className=\"list-group-item border-0 menu-heading\">Subscribe to our newsletter</li>\r\n                        <li className=\"list-group-item border-0 menu-value\"><a href=\"#\">Receive our latest news and \r\n                        promotions in your inbox!</a></li>\r\n                        <li className=\"list-group-item\">\r\n                        <div className=\"newletter\">\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Your Email Address\"/>\r\n                            <i className=\"fa fa-long-arrow-right\"></i>\r\n                        </div>\r\n                        </li>\r\n                    </ul>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"footer-bottom py-3\">\r\n                <div className=\"container\">\r\n                    <div className=\"row align-items-center\">\r\n                    <div className=\"col-md-6\">\r\n                        <p className=\"mb-0\">&copy; 2020 Sage Alliance Inc.</p>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <ul className=\"text-right\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/PrivacyPolicy\">Privacy Policy</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">Terms of Use</a>\r\n                        </li>\r\n                        </ul>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer\r\n","import React, { Component, Suspense, lazy } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nconst GetStarted = lazy(() => import('./Compoenets/GetStarted')) \r\nconst Home = lazy(() => import('./Compoenets/Home')) \r\nconst HelpCenter = lazy(() => import('./Compoenets/HelpCenter')) \r\nconst Contact = lazy(() => import('./Compoenets/Contact')) \r\nconst PrivacyPolicy = lazy(() => import('./Compoenets/PrivacyPolicy')) \r\n\r\n// import GetStarted from \"./Compoenets/GetStarted\"\r\n// import Home from \"./Compoenets/Home\"\r\n// import HelpCenter from './Compoenets/HelpCenter'\r\n// import Contact from './Compoenets/Contact'\r\n// import PrivacyPolicy from './Compoenets/PrivacyPolicy'\r\n\r\nexport class AppRoutes extends Component {\r\n    render() {\r\n        return (\r\n            <Suspense fallback=''>\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <Redirect to=\"/GetStarted\"></Redirect>\r\n                    </Route>\r\n                    <Route exact path=\"/GetStarted\" component={GetStarted} />\r\n                    <Route exact path=\"/Home\" component={Home}/>\r\n                    <Route exact path=\"/HelpCenter\" component={HelpCenter}/>\r\n                    <Route exact path=\"/Contact\" component={Contact}/>\r\n                    <Route exact path=\"/PrivacyPolicy\" component={PrivacyPolicy}/>\r\n                </Switch>\r\n            </Suspense>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppRoutes\r\n","import React,{Component} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Navbarctm from './Compoenets/Shared/Navbarctm'\r\nimport Footer from './Compoenets/Shared/Footer'\r\nimport AppRoutes from './AppRoutes'\r\n\r\nexport class App extends Component {\r\n  state = {}\r\n  componentDidMount() {\r\n    this.onRouteChanged();\r\n  }\r\n  render() {\r\n    let headerComponent = !this.state.isFullPageLayout ? <Navbarctm/> : '';\r\n    let footerComponent = !this.state.isFullPageLayout ? <Footer/> : '';\r\n    return (\r\n      <div>\r\n        {headerComponent}\r\n          <AppRoutes ></AppRoutes>\r\n        {footerComponent}\r\n    </div>\r\n    )\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      this.onRouteChanged();\r\n    }\r\n  }\r\n\r\n  onRouteChanged() {\r\n    debugger\r\n    if(this.props.location.pathname === \"/GetStarted\"){debugger\r\n      document.querySelector('.banner').classList.add('d-none');\r\n      document.querySelector('.footer').classList.add('d-none');\r\n    }\r\n    else{\r\n      document.querySelector('.banner').classList.remove('d-none');\r\n      document.querySelector('.footer').classList.remove('d-none');\r\n    }\r\n  \r\n  }\r\n}\r\n\r\n\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}